### SwayLock
set $swaylock "swaylock -f --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-pixelate 8 --effect-blur 7x7 --line-color 00000000 --inside-color 00000088 --separator-color 00000000 --grace 0 --fade-in 0.2"
#set $swaylock "swaylock -f --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-pixelate 8 --effect-blur 7x7 --line-color 00000000 --inside-color 00000088 --separator-color 00000000 --fade-in 0.2"

### Startup Scripts

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec --no-startup-id nmcli d wifi hotspot ssid alphasquadron password zephyrus
exec amixer -M set Master 60%
# Indicator
set $WOBSOCK /tmp/wobpipe.sock 
exec rm $WOBSOCK 
exec mkfifo $WOBSOCK
exec tail -f $WOBSOCK | wob
#exec_always swayidle -w timeout 100 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' timeout 200 $swaylock timeout 300 'systemclt suspend' before-sleep $swaylock_nograce 
#exec_always swayidle -w timeout 100 $swaylock timeout 300 'systemclt suspend' before-sleep $swaylock unlock 'swaymsg "output * dpms on"'
# Display
#output * bg ~/dotfiles/walls/light_bokeh.jpg fill 
output * bg ~/dotfiles/walls/Dark.png fill 
#output * bg #0c2132 solid_color 

output * adaptive_sync on

bar { 
  swaybar_command waybar
}

# Notificaton Daemon
exec_always --no-startup-id dunst

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec_always nm-applet --indicator
exec_always blueman-applet

# Bitwarden
exec_always --no-startup-id bitwarden


# Waybar
#exec_always --no-startup-id ~/.config/waybar/launch-waybar

# Authentication daemon
exec --no-startup-id lxpolkit

# fan-curve
exec_always --no-startup-id asusctl fan-curve -m Quiet -f cpu -D 30c:0%,40c:0%,50c:0%,60c:5%,70c:10%,80c:35%,90c:50%,100c:60%
exec_always --no-startup-id asusctl fan-curve -m Quiet -f gpu -D 30c:0%,40c:0%,50c:0%,60c:5%,70c:10%,80c:35%,90c:50%,100c:60%
exec_always --no-startup-id asusctl fan-curve -m Quiet -e true
exec_always --no-startup-id asusctl -P Quiet
# Processor power state
exec_always --no-startup-id sudo ryzenadj -a 5000 -b 5000 -c 5000

### Variables
#
# Super key.
set $mod Mod4
# Alt Key
set $alt Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Paths
set $scripts ~/dotfiles/scripts
# Get Volume
#set $GET_VOL PACTL_SINK=$( pactl list short sinks | sed -e 's,^\([0-9][0-9]*\)[^0-9].*,\1,' | head -n 1 ) && VOL_NOW=$( pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $PACTL_SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,' ) && echo $VOL_NOW
#set $GET_VOL pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'
#
# Move mouse with focus
focus_follows_mouse no
mouse_warping output

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu "rofi -combi-modi drun,ssh,run -show combi -show-icons"

# Border and Titlebar
default_border pixel 4

# Colour Scheme
#  colorclass                  border   background     text      indicator  child_aorder
#client.focused              "#52AEFFc0" "#52AEFFfd" "#000000" "#fede00ff" "#52AEFFc0"
#client.unfocused            "#eeeeee50" "#00000070" "#ffffff" "#000000a0" "#3287db00"
#client.focused_inactive     "#3287db00" "#080808c0" "#ffffff" "#F1CF5500" "#3287db00"
#client.urgent               "#FF4133c0" "#FF4133c0" "#ffffff" "#F1CF55c0" "#52AEFFa0"
#client.placeholder          "#00000000" "#0c0c0c00" "#ffffff" "#00000000" "#0c0c0c00"
#client.background           "#FFFFFF00"
client.focused              "#124E8Ffd" "#124789fd" "#ffffff" "#fede00ff" "#124E8Ffd"
client.unfocused            "#eeeeee50" "#00000070" "#ffffff" "#000000a0" "#3287db00"
client.focused_inactive     "#3287db00" "#080808c0" "#ffffff" "#F1CF5500" "#3287db00"
client.urgent               "#FF4133c0" "#FF4133c0" "#ffffff" "#F1CF55c0" "#52AEFFa0"
client.placeholder          "#00000000" "#2c2c2c00" "#ffffff" "#00000000" "#0c0c0c00"
client.background           "#FFFFFF00"

### Workspace Assignments
#for_window [class="Spotify"] move container to workspace $ws4

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec --no-startup-id $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec --no-startup-id $menu

    # Start firefox
    bindsym $mod+Shift+b exec --no-startup-id firefox-wayland

    # Open Emoji Picker
    bindsym $mod+period exec rofimoji

    # Start Nautilus
    bindsym $mod+Shift+f exec --no-startup-id nautilus

    # Reload $the configuration file
    bindsym $mod+Shift+c reload

    # Restart i3
    bindsym $mod+Shift+r restart

    # Reload picom
    bindsym $mod+Shift+p exec --no-startup-id pkill -USR1 picom

    # Enable Hotspot
    bindsym Mod1+h exec --no-startup-id nmcli d wifi hotspot ssid alphasquadron password zephyrus && notify-send "Hotspot Turned on"
    # Enable Hotspot
    bindsym Mod1+Shift+h exec --no-startup-id nmcli con down && notify-send "Disabled Hotspot"

    ### Enable/ Disable gaps
    bindsym $mod+g exec --no-startup-id swaymsg 'gaps inner all set 7 '
    bindsym $mod+Shift+g exec --no-startup-id swaymsg 'gaps inner all set 0' 

    # display
    bindsym --locked $mod+o  exec swaymsg 'output * dpms on'
    bindsym --locked $mod+Shift+o exec swaymsg 'output * dpms off'
    
    # Toggle waybar
    bindsym $mod+p exec killall -SIGUSR1 waybar
#
# System Controls
# 
    
    # Increase and decrease volume
    bindsym --locked XF86AudioRaiseVolume exec  amixer -M sset Master 5%+ unmute | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOBSOCK
    bindsym --locked XF86AudioLowerVolume exec  amixer -M sset Master 5%- unmute | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOBSOCK
    #Mute speakers
    bindsym --locked XF86AudioMute exec amixer sset 'Master' toggle && amixer get Master | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $WOBSOCK

    #Mute Microphone
    bindsym --locked XF86AudioMicMute exec --no-startup-id amixer set Capture toggle && amixer get Capture | grep '\[off\]' && notify-send "MIC switched OFF" || notify-send "MIC switched ON"

    # Play Pause Media
    bindsym --locked XF86AudioPlay exec --no-startup-id playerctl play-pause
    bindsym --locked XF86AudioNext exec --no-startup-id playerctl next
    bindsym --locked XF86AudioPrev exec --no-startup-id playerctl previous

    #Adjust Brightness
    bindsym --locked XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $WOBSOCK
    bindsym --locked XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $WOBSOCK

    bindsym Control+d --locked exec swaymsg "output * dpms on"
    bindsym Control+Shift+d --locked exec swaymsg "output * dpms off"

    # fan profile
    bindsym --locked XF86Launch4 exec --no-startup-id asusctl profile -n
     
    # Touchpad toggle
    bindsym XF86TouchpadToggle exec --no-startup-id $scripts/touchpad_toggle

    # Keboard Backlight
    bindsym --locked  XF86KbdBrightnessUp exec --no-startup-id asusctl -n
    bindsym --locked  XF86KbdBrightnessDown exec --no-startup-id asusctl -p

    # Screenshot
    bindsym Print exec --no-startup-id grim - |wl-copy && notify-send "Screenshot Taken Successfully"
    bindsym Mod1+Print exec --no-startup-id grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot Taken Successfully"
    bindsym Control+Print exec --no-startup-id grim ~/Pictures/Screenshots/Screenshot_$(date +%F\_%T).png |wl-copy && notify-send "Screenshot Saved"
    bindsym Control+Mod1+Print exec --no-startup-id grim -g "$(slurp)" ~/Pictures/Screenshots/Snip_$(date +%F\_%T).png && notify-send "Screenshot Saved"
    bindsym Mod1+Shift+Print exec --no-startup-id grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy && notify-send "Successfully"
    
    # Lock Scren
    bindsym Control+Mod1+l exec $swaylock

    # Exit i3
    bindsym $mod+Shift+e exec --no-startup-id swaynag -t warning -m 'Power Menu' -B 'Reboot' 'reboot'  -B 'Shutdown' 'poweroff' -B 'Logout' 'swaymsg exit'


#

#
# Power Controls
#
    # Power saver mode
    bindsym Mod1+p exec --no-startup-id sudo ryzenadj -a 3000 -b 3000 -c 3000 && notify-send "RyzenAdj Power Save" "Profile Limit Set to 3W"

    # Balanced mode 
    bindsym Mod1+b exec --no-startup-id sudo ryzenadj -a 5500 -b 5500 -c 5500 && notify-send "RyzenAdj Balanced" "Profile Limit Set to 5.5W"
# Fast
    bindsym Mod1+s exec --no-startup-id sudo ryzenadj -a 7000 -b 8000 -c 8000 && notify-send "RyzenAdj Boost" "Profile Changed to 7W"
    # Defaults Mode
    bindsym Mod1+d exec --no-startup-id sudo ryzenadj -a 35000 -b 35000 -c 35000 && notify-send "RyzenAdj Defaults" "Power Limit Set to 35W (MAX PERFORMANCE)"



#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right




# Workspaces:
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
    # Workspaces
    set $ws0 "0: General"
    set $ws1 "1: Shell"
    set $ws2 "2: Dev"
    set $ws3 "3: Web"
    set $ws4 "4: Music"
    set $ws5 "5: Mail"
    set $ws6 "6: Urgent"
    set $ws7 "7: Focused"
    set $ws8 "8"
    set $ws9 "9"
    set $ws10 "10"

    # Switch to workspace
    bindsym $mod+1 workspace $ws1 
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    bindsym $mod+grave workspace $ws0
    

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1 
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+grave move container to workspace $ws0

    # Relative workspace switching
    bindsym Mod1+equal workspace next_on_output
    bindsym Mod1+minus workspace prev_on_output
    bindsym $mod+w workspace back_and_forth


# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Cycle layouts
    bindsym $mod+x layout toggle

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen
    bindsym $mod+n fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Move focus to child container
    bindsym $mod+c focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 45px
    bindsym $down resize grow height 45px
    bindsym $up resize shrink height 45px
    bindsym $right resize grow width 45px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 45px
    bindsym Down resize grow height 45px
    bindsym Up resize shrink height 45px
    bindsym Right resize grow width 45px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

input type:touchpad {
    accel_profile adaptive
    natural_scroll enabled
    tap enabled
    dwt enabled
    scroll_factor 0.45
    pointer_accel 0.3
}
for_window [app_id="firefox-trunk"] inhibit_idle fullscreen
for_window [title="Firefox\ --\ Sharing\ Indicator"] floating enable, sticky enable
exec "systemctl --user import-environment; systemctl --user start sway-session.target"
